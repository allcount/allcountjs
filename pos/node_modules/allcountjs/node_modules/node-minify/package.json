{
  "name": "node-minify",
  "version": "1.3.7",
  "description": "Javascript / CSS minifier based on YUI Compressor / Google Closure Compiler / UglifyJS2 / Sqwish / Clean-css / CSSO",
  "homepage": "https://github.com/srod/node-minify",
  "author": {
    "name": "Rodolphe Stoclin",
    "email": "rodolphe@2clics.net",
    "url": "http://2clics.net"
  },
  "license": "MIT",
  "main": "index",
  "repository": {
    "type": "git",
    "url": "https://github.com/srod/node-minify.git"
  },
  "engines": {
    "node": ">=0.12.0",
    "iojs": ">=1.0.0"
  },
  "dependencies": {
    "clean-css": "3.4.8",
    "csso": "1.4.3",
    "glob": "6.0.1",
    "mkdirp": "0.5.1",
    "node-uuid": "1.4.7",
    "sqwish": "0.2.2",
    "uglify-js": "2.6.1"
  },
  "keywords": [
    "compressor",
    "minify",
    "minifier",
    "yui",
    "gcc",
    "google",
    "closure",
    "compiler",
    "uglifyjs",
    "uglifyjs2",
    "windows",
    "sqwish",
    "clean-css",
    "csso"
  ],
  "scripts": {
    "test": "make test"
  },
  "devDependencies": {
    "chai": "3.4.1",
    "coveralls": "2.11.4",
    "grunt": "0.4.5",
    "grunt-cli": "0.1.13",
    "grunt-contrib-jshint": "0.11.3",
    "grunt-jscs": "2.4.0",
    "grunt-mocha-test": "0.12.7",
    "istanbul": "0.4.1",
    "jshint-stylish": "2.1.0",
    "load-grunt-tasks": "3.3.0",
    "mocha": "2.3.4",
    "semver": "5.1.0",
    "should": "8.0.0",
    "time-grunt": "1.2.2"
  },
  "readme": "[![Build Status](https://img.shields.io/travis/srod/node-minify/master.svg?label=linux)](https://travis-ci.org/srod/node-minify)\n[![Build status](https://img.shields.io/appveyor/ci/srod/node-minify/master.svg?label=windows)](https://ci.appveyor.com/project/srod/node-minify)\n[![Coverage Status](https://coveralls.io/repos/srod/node-minify/badge.svg?branch=master&service=github)](https://coveralls.io/github/srod/node-minify?branch=master)\n[![Dependency Status](http://img.shields.io/david/srod/node-minify.svg?style=flat)](https://david-dm.org/srod/node-minify)\n[![devDependency Status](http://img.shields.io/david/dev/srod/node-minify.svg?style=flat)](https://david-dm.org/srod/node-minify#info=devDependencies)\n[![NPM version](http://img.shields.io/npm/v/node-minify.svg?style=flat)](https://www.npmjs.org/package/node-minify)\n[![NPM downloads](https://img.shields.io/npm/dm/node-minify.svg)](http://npm-stat.com/charts.html?package=node-minify)\n\n# Node-minify\n\nA very light minifier NodeJS module.\n\nSupport:\n\n- YUI Compressor --version 2.4.7\n- Google Closure Compiler --version v20130411\n- UglifyJS2\n- Clean-css\n- CSSO\n- Sqwish\n\nIt allow you to compress JavaScript and CSS files.\n\nCSS benchmark : http://goalsmashers.github.io/css-minification-benchmark/\n\nI recommend to execute it at boot time for production use.\n\nSee `server.js` in `examples/`.\n\n## Installation\n\n```bash\nnpm install node-minify\n```\n\n## Quick Start\n\n```js\nvar compressor = require('node-minify');\n\n// Using Google Closure\nnew compressor.minify({\n  type: 'gcc',\n  fileIn: 'public/js/base.js',\n  fileOut: 'public/js-dist/base-min-gcc.js',\n  callback: function(err, min){\n    console.log(err);\n    //console.log(min);\n  }\n});\n\n// Array\nnew compressor.minify({\n  type: 'gcc',\n  fileIn: ['public/js/base.js', 'public/js/base2.js'],\n  fileOut: 'public/js-dist/base-onefile-gcc.js',\n  callback: function(err, min){\n    console.log(err);\n    //console.log(min);\n  }\n});\n\n// Only concatenation of files (no compression)\nnew compressor.minify({\n    type: 'no-compress',\n    fileIn: ['public/js/base.js', 'public/js/base2.js'],\n    fileOut: 'public/js-dist/base-onefile-gcc.js',\n    callback: function(err, min){\n      console.log(err);\n      //console.log(min);\n    }\n});\n\n// Using YUI Compressor for CSS\nnew compressor.minify({\n  type: 'yui-css',\n  fileIn: 'public/css/base.css',\n  fileOut: 'public/css/base-min-yui.css',\n  callback: function(err, min){\n    console.log(err);\n    //console.log(min);\n  }\n});\n\n// Using YUI Compressor for JS\nnew compressor.minify({\n  type: 'yui-js',\n  fileIn: 'public/js/base.js',\n  fileOut: 'public/js-dist/base-min-yui.js',\n  callback: function(err, min){\n    console.log(err);\n    //console.log(min);\n  }\n});\n\n// Using UglifyJS for JS\nnew compressor.minify({\n  type: 'uglifyjs',\n  fileIn: 'public/js/base.js',\n  fileOut: 'public/js-dist/base-onefile-uglify.js',\n  callback: function(err, min){\n    console.log(err);\n    //console.log(min);\n  }\n});\n\n// Using Sqwish for CSS\nnew compressor.minify({\n    type: 'sqwish',\n  fileIn: ['public/css/base.css', 'public/css/base2.css'],\n  fileOut: 'public/css/base-min-sqwish.css',\n    callback: function(err, min){\n      console.log('Sqwish');\n      console.log(err);\n      //console.log(min);\n    }\n});\n\n// Using public folder option\nnew compressor.minify({\n    type: 'yui-js',\n    publicFolder: 'public/js/',\n    fileIn: 'base.js',\n    fileOut: 'public/js-dist/base-min-yui-publicfolder.js',\n    callback: function(err, min){\n      console.log('YUI JS with publicFolder option');\n      console.log(err);\n      //console.log(min);\n    }\n});\n\n// Using Clean-css for CSS\nnew compressor.minify({\n    type: 'clean-css',\n  fileIn: ['public/css/base.css', 'public/css/base2.css'],\n  fileOut: 'public/css/base-min-cleancss.css',\n    callback: function(err, min){\n      console.log('Clean-css');\n      console.log(err);\n      //console.log(min);\n    }\n});\n\n// Using CSSO for CSS\nnew compressor.minify({\n    type: 'csso',\n  fileIn: ['public/css/base.css', 'public/css/base2.css'],\n  fileOut: 'public/css/base-min-csso.css',\n    callback: function(err, min){\n      console.log('CSSO');\n      console.log(err);\n      //console.log(min);\n    }\n});\n```\n\n## Concatenate Files\n\nIn order to concatenate files, simply pass in an array with the file paths to `fileIn`.\n\n```js\nfileIn: ['public/js/base.js', 'public/js/base2.js', ...]\n```\n\n## Using sync option\n```js\nnew compressor.minify({\n  type: 'yui-js',\n  publicFolder: 'public/js/',\n  fileIn: 'base.js',\n  fileOut: 'public/js-dist/base-min-yui-publicfolder.js',\n  sync: true,\n  callback: function(err, min) {\n    console.log('YUI JS with publicFolder option');\n    console.log(err);\n    //console.log(min);\n  }\n});\n```\n\n## Using wildcards\n\n```js\nnew compressor.minify({\n  type: 'gcc',\n  fileIn: 'public/**/*.js',\n  fileOut: 'public/js-dist/wildcards-match-gcc.js',\n  callback: function(err, min){\n    console.log('wildcards match GCC');\n    console.log(err);\n    //console.log(min);\n  }\n});\n```\n\n## Passing options\n\nYou can pass any option/flag you want\n\n```js\noptions: ['--option=1', '--option=2']\n\nnew compressor.minify({\n  type: 'gcc',\n  language: 'ECMASCRIPT5',\n  fileIn: 'public/js/jquery-2.0.3.js',\n  fileOut: 'public/js-dist/jquery-2.0.3-gcc.js',\n  options: ['--option=1', '--option=2'],\n  callback: function(err, min){\n    console.log('GCC jquery 2.0');\n    console.log(err);\n    //console.log(min);\n  }\n});\n```\n\n## Max Buffer Size\n\nIn some cases you might need a bigger max buffer size (for example when minifying really large files).\nBy default the buffer is `1000 * 1024` which should be enough. If you however need more buffer, you can simply pass in the desired buffer size as an argument to `compressor.minify` like so:\n\n```js\nnew compressor.minify({\n  type: 'uglifyjs',\n  fileIn: './public/css/base.css',\n  fileOut: './public/css/base-min-uglifyjs.css',\n  buffer: 1000 * 1024,\n  callback: function(err){\n    console.log(err);\n  }\n});\n```\n\n## Temp Path\n\nYou can define a temporary folder where temporary files will be generated :\n\n```js\nnew compressor.minify({\n  type: 'yui-js',\n  fileIn: 'public/js/base.js',\n  fileOut: 'public/js-dist/base-min-yui.js',\n  tempPath: '/tmp/',\n  callback: function(err){\n    console.log(err);\n  }\n});\n```\n\n## YUI Compressor\n\n  Yahoo Compressor can compress both JavaScript and CSS files.\n\n  http://developer.yahoo.com/yui/compressor/\n\n## Google Closure Compiler\n\n  Google Closure Compiler can compress only JavaScript files.\n\n  It will throw an error if you try with CSS files.\n\n  https://developers.google.com/closure/compiler/\n\n## UglifyJS\n\n  UglifyJS can compress only JavaScript files.\n\n  It will throw an error if you try with CSS files.\n\n  https://github.com/mishoo/UglifyJS\n\n## Clean-css\n\n  Clean-css can compress only CSS files.\n\n  https://github.com/GoalSmashers/clean-css\n\n## CSSO\n\n  CSSO can compress only CSS files.\n\n  https://github.com/css/csso\n\n## Sqwish\n\n  Sqwish can compress only CSS files.\n\n  https://github.com/ded/sqwish\n\n## Warning\n\n  It assumes you have Java installed on your environment for both GCC and YUI Compressor. To check, run:\n\n```bash\njava -version\n```\n\n## Windows support\n\n  Since v0.5.0, a windows support is available for the no-compress option and uglify-js (thanks to pieces029 and benpusherhq)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/srod/node-minify/issues"
  },
  "_id": "node-minify@1.3.7",
  "_from": "node-minify@^1.2.1"
}
