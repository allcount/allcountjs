{
  "author": {
    "name": "AJ ONeal",
    "email": "awesome@coolaj86@.com",
    "url": "http://coolaj86.com/"
  },
  "name": "fs.extra",
  "description": "fs.move and fs.copy for Node.JS",
  "version": "1.3.2",
  "repository": {
    "type": "git",
    "url": "git://github.com/coolaj86/utile-fs.git"
  },
  "main": "fs.extra",
  "scripts": {
    "test": "node test.js"
  },
  "engines": {
    "node": "*"
  },
  "dependencies": {
    "fs-extra": "~0.6.1",
    "mkdirp": "~0.3.5",
    "walk": "^2.3.9"
  },
  "devDependencies": {
    "sequence": "~2.2.1"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    },
    {
      "type": "Apache License, Version 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  ],
  "readme": "fs.extra\n===\n\nExtra file utilities for node.js\n\n**Includes**\n\n* `copy`\n* `copyRecursive`\n* `mkdirp`\n* `move`\n* `walk`\n* `rmrf`\n\n**Install**\n\n``` bash\nnpm install --save fs.extra\n````\n\n**Usage**\n\n```javascript\n// this will have all of a copy of the normal fs methods as well\nvar fs = require('fs.extra');\n```\n\nfs.copy\n===\n\nCreates an `fs.readStream` and `fs.writeStream` and uses `util.pump` to efficiently copy.\n\n```javascript\nfs.copy('foo.txt', 'bar.txt', { replace: false }, function (err) {\n  if (err) {\n    // i.e. file already exists or can't write to directory\n    throw err;\n  }\n\n  console.log(\"Copied 'foo.txt' to 'bar.txt');\n});\n```\n\nOptions are optional. `replace` defaults to false, but will replace existing files if set to `true`.\n\nfs.copyRecursive\n===\n\nBasically a local `rsync`, uses `fs.copy` to recursively copy files and folders (with correct permissions).\n\n```javascript\nfs.copyRecursive('./foo', './bar', function (err) {\n  if (err) {\n    throw err;\n  }\n\n  console.log(\"Copied './foo' to './bar');\n});\n```\n\nfs.mkdirRecursive\n===\n\nIncluded from <https://github.com/substack/node-mkdirp>\n\n```javascript\n// fs.mkdirp(path, mode=(0777 & (~process.umask())), cb);\n\nfs.mkdirp('/tmp/foo/bar/baz', function (err) {\n  if (err) {\n    console.error(err);\n  } else {\n    console.log('pow!')\n  }\n});\n```\n\nfs.mkdirRecursiveSync\n===\n\nIncluded from <https://github.com/substack/node-mkdirp>\n\n```javascript\n// fs.mkdirpSync(path, mode=(0777 & (~process.umask())));\n\ntry {\n  fs.mkdirpSync('/tmp/foo/bar/baz');\n} catch(e) {\n  throw e;\n}\n```\n\nfs.move\n===\n\nAttempts `fs.rename`, then tries `fs.copy` + `fs.unlink` before failing.\n\n```javascript\nfs.move('foo.txt', 'bar.txt', function (err) {\n  if (err) {\n    throw err;\n  }\n\n  console.log(\"Moved 'foo.txt' to 'bar.txt');\n});\n```\n\nfs.rmRecursive\n===\n\nIncluded from <https://github.com/jprichardson/node-fs-extra>\n\nRecursively deletes a directory (like `rm -rf`)\n\n```javascript\n// fs.rmrf(dir, callback);\n\nfs.rmrf('/choose/me/carefully/', function (err) {\n  if (err) {\n    console.error(err);\n  }\n});\n```\n\nfs.rmRecursiveSync\n===\n\nIncluded from <https://github.com/jprichardson/node-fs-extra>\n\nRecursively deletes a directory (like `rm -rf`)\n\n```javascript\n// fs.rmrfSync(dir);\n\nfs.rmrfSync('/choose/me/carefully/');\n```\n\nfs.walk\n===\n\nSee <https://github.com/coolaj86/node-walk>\n\n```javascript\nvar walker = fs.walk(dir)\n  ;\n\n// file, files, directory, directories\nwalker.on(\"file\", function (root, stat, next) {\n  var filepath = path.join(root, stat.name)\n    ;\n\n  console.log(filepath);\n});\n```\n\nAliases and Backwards Compatibility\n===\n\nFor the sake of backwards compatability, you can call the recursive functions with their names as such\n\n    fs.remove <- fs.rmRecursive <- fs.rmrf\n    fs.removeSync <- fs.rmRecursiveSync <- fs.rmrfSync\n    fs.mkdirRecursive <- fs.mkdirp\n    fs.mkdirRecursiveSync <- fs.mkdirpSync\n\nLicense\n===\n\nCopyright AJ ONeal 2011-2015\n\nThis project is available under the MIT and Apache v2 licenses.\n\n  * http://www.opensource.org/licenses/mit-license.php\n  * http://www.apache.org/licenses/LICENSE-2.0.html\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/coolaj86/utile-fs/issues"
  },
  "_id": "fs.extra@1.3.2",
  "_from": "fs.extra@^1.2.1"
}
