{
  "name": "console-stamp",
  "main": "main",
  "version": "0.1.6",
  "author": {
    "name": "Ståle Raknes",
    "email": "stale@raknes.net",
    "url": "http://github.com/starak"
  },
  "contributors": [
    {
      "name": "Ståle Raknes",
      "url": "http://github.com/starak"
    },
    {
      "name": "Jotham Read",
      "url": "https://github.com/jotham"
    },
    {
      "name": "Christiaan Westerbeek",
      "url": "https://github.com/devotis"
    }
  ],
  "description": "Patch NodeJS console methods in order to add timestamp information by pattern",
  "keywords": [
    "console",
    "timestamp",
    "log",
    "jslog",
    "debug"
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/starak/node-console-stamp.git"
  },
  "license": "MIT",
  "dependencies": {
    "dateformat": "1.0.7-1.2.3"
  },
  "readme": "# console-stamp\n\nPatch Node.js console methods in order to add timestamp information by pattern.\n\n## Usage ##\n\n### Installing ###\n\n\tnpm install console-stamp\n\n### Patching the console ###\n\n\t// Patch console.x methods in order to add timestamp information\n\trequire(\"console-stamp\")(console, \"HH:MM:ss.l\");\n\n\tconsole.log(\"Hello World!\");\n\t// -> [14:02:48.062] [LOG] Hello World!\n\n\tvar port = 8080;\n\tconsole.log(\"Server running at port %d\", port);\n\t// -> [16:02:35.325] [LOG] Server running at port 8080\n\n### Example\n\n\tconsole.time( \"MyTimer\" );\n\tconsole.log( \"LOG\" );\n\tconsole.info( \"INFO\" );\n\tconsole.warn( \"WARN\" );\n\tconsole.error( \"ERROR\" );\n\tconsole.dir( { foo: \"bar\" } );\n\tconsole.trace();\n\tconsole.timeEnd( \"MyTimer\" );\n\tconsole.assert( count < 10, \"Count is > 10\" );\n\nResult:\n\n    [20:04:05.969] [LOG] LOG\n    [20:04:05.972] [INFO] INFO\n    [20:04:05.972] [WARN] WARN\n    [20:04:05.972] [ERROR] ERROR\n    [20:04:05.972] [DIR] { bar: 'console.dir' }\n    [20:04:05.975] [ERROR] Trace\n        at Object.<anonymous> (/Users/starak/code/node-console-stamp/test.js:14:9)\n        at Module._compile (module.js:456:26)\n        at Object.Module._extensions..js (module.js:474:10)\n        at Module.load (module.js:356:32)\n        at Function.Module._load (module.js:312:12)\n        at Function.Module.runMain (module.js:497:10)\n        at startup (node.js:119:16)\n        at node.js:906:3\n    [20:04:05.975] [LOG] MyTimer: 6ms\n    [20:04:05.976] [ASSERT]\n    AssertionError: Count is > 10\n        at Console.assert (console.js:102:23)\n        at Console.con.(anonymous function) [as assert] (/Users/starak/code/node-console-stamp/main.js:35:24)\n        at Object.<anonymous> (/Users/starak/code/node-console-stamp/test.js:16:9)\n        at Module._compile (module.js:456:26)\n        at Object.Module._extensions..js (module.js:474:10)\n        at Module.load (module.js:356:32)\n        at Function.Module._load (module.js:312:12)\n        at Function.Module.runMain (module.js:497:10)\n        at startup (node.js:119:16)\n        at node.js:906:3\n\nSee more about timestamp patterns at [felixges][felixge] excellent [dateformat][dateformat]\n\n[dateformat]: https://github.com/felixge/node-dateformat\n[felixge]: https://github.com/felixge\n[FGRibreau]: https://github.com/FGRibreau/node-nice-console\n\n### Adding Metadata ###\n\nTypes can be String, Object (interpreted with util.inspect), or Function. See the test-metadata.js for examples.\n\n### String example\n\n    require(\"console-stamp\")(console, \"HH:MM:ss.l\", '[' + process.pid + ']');\n\n    console.log('Metadata applied.');\n\nResult:\n\n    [18:10:30.875] [LOG] [7785] Metadata applied.\n\n### Function example\n\n    var util = require(\"util\");\n\n    require(\"console-stamp\")(console, \"HH:MM:ss.l\", function(){ return '[' + (process.memoryUsage().rss) + ']'; });\n\n    console.log('Metadata applied.');\n\nResult:\n\n    [18:10:30.875] [LOG] [14503936] Metadata applied.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/starak/node-console-stamp/issues"
  },
  "_id": "console-stamp@0.1.6",
  "_from": "console-stamp@^0.1.3"
}
