{
  "name": "cookie",
  "description": "cookie parsing and serialization",
  "version": "0.1.5",
  "author": {
    "name": "Roman Shtylman",
    "email": "shtylman@gmail.com"
  },
  "contributors": [
    {
      "name": "Douglas Christopher Wilson",
      "email": "doug@somethingdoug.com"
    }
  ],
  "license": "MIT",
  "keywords": [
    "cookie",
    "cookies"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jshttp/cookie"
  },
  "devDependencies": {
    "istanbul": "0.3.20",
    "mocha": "1.21.5"
  },
  "files": [
    "HISTORY.md",
    "LICENSE",
    "README.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.6"
  },
  "scripts": {
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-ci": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/"
  },
  "readme": "# cookie\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Node.js Version][node-version-image]][node-version-url]\r\n[![Build Status][travis-image]][travis-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\ncookie is a basic cookie parser and serializer. It doesn't make assumptions about how you are going to deal with your cookies. It basically just provides a way to read and write the HTTP cookie headers.\r\n\r\nSee [RFC6265](http://tools.ietf.org/html/rfc6265) for details about the http header for cookies.\r\n\r\n## how?\r\n\r\n```\r\nnpm install cookie\r\n```\r\n\r\n```javascript\r\nvar cookie = require('cookie');\r\n\r\nvar hdr = cookie.serialize('foo', 'bar');\r\n// hdr = 'foo=bar';\r\n\r\nvar cookies = cookie.parse('foo=bar; cat=meow; dog=ruff');\r\n// cookies = { foo: 'bar', cat: 'meow', dog: 'ruff' };\r\n```\r\n\r\n## more\r\n\r\nThe serialize function takes a third parameter, an object, to set cookie options. See the RFC for valid values.\r\n\r\n### path\r\n> cookie path\r\n\r\n### expires\r\n> absolute expiration date for the cookie (Date object)\r\n\r\n### maxAge\r\n> relative max age of the cookie from when the client receives it (seconds)\r\n\r\n### domain\r\n> domain for the cookie\r\n\r\n### secure\r\n> true or false\r\n\r\n### httpOnly\r\n> true or false\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/cookie.svg\r\n[npm-url]: https://npmjs.org/package/cookie\r\n[node-version-image]: https://img.shields.io/node/v/cookie.svg\r\n[node-version-url]: http://nodejs.org/download/\r\n[travis-image]: https://img.shields.io/travis/jshttp/cookie/master.svg\r\n[travis-url]: https://travis-ci.org/jshttp/cookie\r\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/cookie/master.svg\r\n[coveralls-url]: https://coveralls.io/r/jshttp/cookie?branch=master\r\n[downloads-image]: https://img.shields.io/npm/dm/cookie.svg\r\n[downloads-url]: https://npmjs.org/package/cookie\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jshttp/cookie/issues"
  },
  "_id": "cookie@0.1.5",
  "dist": {
    "shasum": "39cb7946d6f2c69e527d16dd3ab8ae1c2689eed3"
  },
  "_from": "cookie@0.1.5",
  "_resolved": "https://registry.npmjs.org/cookie/-/cookie-0.1.5.tgz"
}
