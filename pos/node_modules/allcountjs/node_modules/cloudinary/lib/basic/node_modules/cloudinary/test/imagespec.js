// Generated by CoffeeScript 1.9.3
(function() {
  var cloudinary, expect;

  expect = require('expect.js');

  cloudinary = require('../cloudinary');

  describe('image helper', function() {
    beforeEach(function() {
      cloudinary.config(true);
      return cloudinary.config({
        cloud_name: "test",
        api_secret: "1234"
      });
    });
    it("should generate image", function() {
      return expect(cloudinary.image("hello", {
        format: "png"
      })).to.eql("<img src='http://res.cloudinary.com/test/image/upload/hello.png' />");
    });
    it("should accept scale crop and pass width/height to image tag ", function() {
      return expect(cloudinary.image("hello", {
        format: "png",
        crop: 'scale',
        width: 100,
        height: 100
      })).to.eql("<img src='http://res.cloudinary.com/test/image/upload/c_scale,h_100,w_100/hello.png' height='100' width='100'/>");
    });
    it("should add responsive width transformation", function() {
      return expect(cloudinary.image("hello", {
        format: "png",
        responsive_width: true
      })).to.eql("<img class='cld-responsive' data-src='http://res.cloudinary.com/test/image/upload/c_limit,w_auto/hello.png'/>");
    });
    it("should support width auto transformation", function() {
      return expect(cloudinary.image("hello", {
        format: "png",
        width: "auto",
        crop: "limit"
      })).to.eql("<img class='cld-responsive' data-src='http://res.cloudinary.com/test/image/upload/c_limit,w_auto/hello.png'/>");
    });
    it("should support dpr auto transformation", function() {
      return expect(cloudinary.image("hello", {
        format: "png",
        dpr: "auto"
      })).to.eql("<img class='cld-hidpi' data-src='http://res.cloudinary.com/test/image/upload/dpr_auto/hello.png'/>");
    });
    return it("should not mutate the options argument", function() {
      var options;
      options = {
        fetch_format: 'auto',
        flags: 'progressive'
      };
      cloudinary.image('hello', options);
      expect(options.fetch_format).to.eql('auto');
      return expect(options.flags).to.eql('progressive');
    });
  });

}).call(this);

//# sourceMappingURL=imagespec.js.map
