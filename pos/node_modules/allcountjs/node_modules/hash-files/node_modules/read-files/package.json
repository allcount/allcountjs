{
  "author": {
    "name": "Paul Vorbach",
    "email": "paul@vorb.de",
    "url": "http://vorb.de"
  },
  "contributors": [
    {
      "name": "Jasper Palfree",
      "url": "https://github.com/wellcaffeinated"
    }
  ],
  "name": "read-files",
  "description": "Asynchronously reads an array of files and returns their contents.",
  "version": "0.1.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/pvorb/node-read-files.git"
  },
  "bugs": {
    "url": "https://github.com/pvorb/node-read-files/issues"
  },
  "main": "read-files.js",
  "engines": {
    "node": ">=0.4.0"
  },
  "dependencies": {},
  "readme": "**read-files** extends `fs` by the static method `readFiles`.\n\n## `fs.readFiles(filenames[, encoding, batchCount], callback)`\n\nAsynchronously reads the entire contents of the files specified in `filenames`.\n\n`filenames` is an array of filenames.\n\n`encoding` is a string specifying the files' encodings. The default is \"utf8\".\n\n`batchCount` is a number specifying the number of files to process at a time before moving to the next batch (default 100).\n\n`callback` is a callback function that is passed two arguments `(err, data)`\nwhere `data` is an object of the form:\n\n```javascript\n{\n\tfilename1: file1contents,\n\tfilename2: file2contents,\n\tâ€¦\n}\n```\n\nExample:\n\n```javascript\nvar fs = require(\"fs\");\n    require(\"read-files\");\n\nfs.readFiles([ \"file1\", \"file2\" ], \"utf8\", function(err, data) {\n\tif (err) throw err;\n\n\tconsole.log(data);\n});\n```\n",
  "readmeFilename": "README.mkd",
  "_id": "read-files@0.1.0",
  "_from": "read-files@^0.1.0"
}
