{
  "name": "component-emitter",
  "description": "Event emitter",
  "version": "1.2.1",
  "license": "MIT",
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "component": {
    "scripts": {
      "emitter/index.js": "index.js"
    }
  },
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/component/emitter.git"
  },
  "scripts": {
    "test": "make test"
  },
  "files": [
    "index.js",
    "LICENSE"
  ],
  "readme": "# Emitter [![Build Status](https://travis-ci.org/component/emitter.png)](https://travis-ci.org/component/emitter)\r\n\r\n  Event emitter component.\r\n\r\n## Installation\r\n\r\n```\r\n$ component install component/emitter\r\n```\r\n\r\n## API\r\n\r\n### Emitter(obj)\r\n\r\n  The `Emitter` may also be used as a mixin. For example\r\n  a \"plain\" object may become an emitter, or you may\r\n  extend an existing prototype.\r\n\r\n  As an `Emitter` instance:\r\n\r\n```js\r\nvar Emitter = require('emitter');\r\nvar emitter = new Emitter;\r\nemitter.emit('something');\r\n```\r\n\r\n  As a mixin:\r\n\r\n```js\r\nvar Emitter = require('emitter');\r\nvar user = { name: 'tobi' };\r\nEmitter(user);\r\n\r\nuser.emit('im a user');\r\n```\r\n\r\n  As a prototype mixin:\r\n\r\n```js\r\nvar Emitter = require('emitter');\r\nEmitter(User.prototype);\r\n```\r\n\r\n### Emitter#on(event, fn)\r\n\r\n  Register an `event` handler `fn`.\r\n\r\n### Emitter#once(event, fn)\r\n\r\n  Register a single-shot `event` handler `fn`,\r\n  removed immediately after it is invoked the\r\n  first time.\r\n\r\n### Emitter#off(event, fn)\r\n\r\n  * Pass `event` and `fn` to remove a listener.\r\n  * Pass `event` to remove all listeners on that event.\r\n  * Pass nothing to remove all listeners on all events.\r\n\r\n### Emitter#emit(event, ...)\r\n\r\n  Emit an `event` with variable option args.\r\n\r\n### Emitter#listeners(event)\r\n\r\n  Return an array of callbacks, or an empty array.\r\n\r\n### Emitter#hasListeners(event)\r\n\r\n  Check if this emitter has `event` handlers.\r\n\r\n## License\r\n\r\nMIT\r\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/component/emitter/issues"
  },
  "_id": "component-emitter@1.2.1",
  "_from": "component-emitter@~1.2.0"
}
